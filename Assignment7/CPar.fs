// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)

open Absyn

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10

# 19 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | SPM
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_SPM
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | NOT  -> 12 
  | SEQOR  -> 13 
  | SEQAND  -> 14 
  | EQ  -> 15 
  | NE  -> 16 
  | GT  -> 17 
  | LT  -> 18 
  | GE  -> 19 
  | LE  -> 20 
  | SPM  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | CHAR  -> 27 
  | ELSE  -> 28 
  | IF  -> 29 
  | INT  -> 30 
  | NULL  -> 31 
  | PRINT  -> 32 
  | PRINTLN  -> 33 
  | RETURN  -> 34 
  | VOID  -> 35 
  | WHILE  -> 36 
  | FOR  -> 37 
  | CSTSTRING _ -> 38 
  | NAME _ -> 39 
  | CSTINT _ -> 40 
  | CSTBOOL _ -> 41 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_NOT 
  | 13 -> TOKEN_SEQOR 
  | 14 -> TOKEN_SEQAND 
  | 15 -> TOKEN_EQ 
  | 16 -> TOKEN_NE 
  | 17 -> TOKEN_GT 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_GE 
  | 20 -> TOKEN_LE 
  | 21 -> TOKEN_SPM 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_CHAR 
  | 28 -> TOKEN_ELSE 
  | 29 -> TOKEN_IF 
  | 30 -> TOKEN_INT 
  | 31 -> TOKEN_NULL 
  | 32 -> TOKEN_PRINT 
  | 33 -> TOKEN_PRINTLN 
  | 34 -> TOKEN_RETURN 
  | 35 -> TOKEN_VOID 
  | 36 -> TOKEN_WHILE 
  | 37 -> TOKEN_FOR 
  | 38 -> TOKEN_CSTSTRING 
  | 39 -> TOKEN_NAME 
  | 40 -> TOKEN_CSTINT 
  | 41 -> TOKEN_CSTBOOL 
  | 44 -> TOKEN_end_of_input
  | 42 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtU 
    | 32 -> NONTERM_StmtU 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_Expr 
    | 36 -> NONTERM_Expr 
    | 37 -> NONTERM_ExprNotAccess 
    | 38 -> NONTERM_ExprNotAccess 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_AtExprNotAccess 
    | 60 -> NONTERM_AtExprNotAccess 
    | 61 -> NONTERM_AtExprNotAccess 
    | 62 -> NONTERM_Access 
    | 63 -> NONTERM_Access 
    | 64 -> NONTERM_Access 
    | 65 -> NONTERM_Access 
    | 66 -> NONTERM_Access 
    | 67 -> NONTERM_Exprs 
    | 68 -> NONTERM_Exprs 
    | 69 -> NONTERM_Exprs1 
    | 70 -> NONTERM_Exprs1 
    | 71 -> NONTERM_Const 
    | 72 -> NONTERM_Const 
    | 73 -> NONTERM_Const 
    | 74 -> NONTERM_Const 
    | 75 -> NONTERM_Type 
    | 76 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 44 
let _fsyacc_tagOfErrorTerminal = 42

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | SPM  -> "SPM" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | SPM  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;2us;65535us;0us;2us;4us;5us;2us;65535us;0us;4us;4us;4us;8us;65535us;0us;6us;4us;6us;25us;34us;29us;34us;35us;34us;37us;42us;40us;42us;43us;42us;4us;65535us;9us;11us;10us;11us;14us;15us;16us;17us;2us;65535us;0us;8us;4us;8us;2us;65535us;25us;26us;29us;30us;3us;65535us;25us;33us;29us;33us;35us;36us;9us;65535us;27us;28us;31us;32us;37us;54us;40us;54us;43us;54us;58us;54us;59us;54us;64us;54us;73us;54us;3us;65535us;37us;38us;40us;41us;43us;44us;4us;65535us;37us;40us;40us;40us;43us;40us;58us;76us;7us;65535us;37us;45us;40us;45us;43us;45us;58us;46us;59us;60us;64us;65us;73us;74us;7us;65535us;37us;47us;40us;47us;43us;47us;58us;47us;59us;75us;64us;77us;73us;78us;35us;65535us;37us;48us;40us;48us;43us;48us;50us;52us;56us;57us;58us;48us;59us;48us;62us;63us;64us;48us;67us;68us;69us;70us;71us;72us;73us;48us;84us;85us;87us;112us;90us;91us;92us;93us;113us;95us;114us;96us;115us;97us;116us;98us;117us;99us;118us;100us;119us;101us;120us;102us;121us;103us;122us;104us;123us;105us;124us;106us;125us;107us;132us;109us;133us;110us;135us;108us;146us;111us;149us;112us;35us;65535us;37us;81us;40us;81us;43us;81us;50us;81us;56us;81us;58us;81us;59us;81us;62us;81us;64us;81us;67us;81us;69us;81us;71us;81us;73us;81us;84us;81us;87us;81us;90us;81us;92us;81us;113us;81us;114us;81us;115us;81us;116us;81us;117us;81us;118us;81us;119us;81us;120us;81us;121us;81us;122us;81us;123us;81us;124us;81us;125us;81us;132us;81us;133us;81us;135us;82us;146us;81us;149us;81us;36us;65535us;37us;83us;40us;83us;43us;83us;50us;83us;56us;83us;58us;83us;59us;83us;62us;83us;64us;83us;67us;83us;69us;83us;71us;83us;73us;83us;84us;83us;87us;83us;90us;83us;92us;83us;113us;83us;114us;83us;115us;83us;116us;83us;117us;83us;118us;83us;119us;83us;120us;83us;121us;83us;122us;83us;123us;83us;124us;83us;125us;83us;132us;83us;133us;83us;135us;83us;143us;145us;146us;83us;149us;83us;40us;65535us;37us;80us;40us;80us;43us;80us;50us;80us;56us;80us;58us;80us;59us;80us;62us;80us;64us;80us;67us;80us;69us;80us;71us;80us;73us;80us;84us;80us;87us;80us;90us;80us;92us;80us;113us;80us;114us;80us;115us;80us;116us;80us;117us;80us;118us;80us;119us;80us;120us;80us;121us;80us;122us;80us;123us;80us;124us;80us;125us;80us;127us;128us;130us;131us;132us;80us;133us;80us;135us;79us;137us;138us;140us;141us;143us;144us;146us;80us;149us;80us;1us;65535us;87us;88us;2us;65535us;87us;148us;149us;150us;36us;65535us;37us;134us;40us;134us;43us;134us;50us;134us;56us;134us;58us;134us;59us;134us;62us;134us;64us;134us;67us;134us;69us;134us;71us;134us;73us;134us;84us;134us;87us;134us;90us;134us;92us;134us;113us;134us;114us;134us;115us;134us;116us;134us;117us;134us;118us;134us;119us;134us;120us;134us;121us;134us;122us;134us;123us;134us;124us;134us;125us;134us;132us;134us;133us;134us;135us;134us;143us;134us;146us;134us;149us;134us;8us;65535us;0us;10us;4us;10us;25us;9us;29us;9us;35us;9us;37us;9us;40us;9us;43us;9us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;6us;9us;18us;23us;26us;29us;33us;43us;47us;52us;60us;68us;104us;140us;177us;218us;220us;223us;260us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;3us;1us;3us;1us;4us;1us;4us;1us;5us;1us;6us;2us;6us;13us;3us;6us;10us;11us;1us;7us;2us;7us;13us;1us;8us;3us;8us;10us;11us;1us;9us;3us;9us;10us;11us;1us;9us;2us;10us;11us;1us;10us;1us;11us;1us;11us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;13us;1us;13us;1us;13us;1us;13us;1us;15us;2us;16us;17us;1us;17us;1us;17us;1us;18us;1us;18us;1us;18us;1us;20us;1us;20us;1us;21us;1us;21us;1us;21us;1us;22us;3us;22us;28us;31us;1us;23us;15us;24us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;1us;24us;2us;25us;26us;1us;25us;15us;26us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;1us;26us;1us;27us;3us;28us;31us;32us;3us;28us;31us;32us;17us;28us;31us;32us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;3us;28us;31us;32us;2us;28us;31us;1us;28us;2us;29us;33us;2us;29us;33us;16us;29us;33us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;2us;29us;33us;1us;29us;2us;30us;34us;2us;30us;34us;16us;30us;34us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;2us;30us;34us;16us;30us;34us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;2us;30us;34us;16us;30us;34us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;2us;30us;34us;1us;30us;1us;31us;1us;32us;1us;33us;1us;34us;4us;35us;38us;63us;66us;3us;35us;38us;66us;1us;36us;2us;36us;60us;1us;37us;1us;38us;15us;38us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;2us;39us;62us;1us;39us;1us;39us;1us;39us;1us;40us;15us;40us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;1us;41us;15us;41us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;1us;42us;15us;43us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;15us;43us;44us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;15us;43us;44us;45us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;15us;43us;44us;45us;46us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;15us;43us;44us;45us;46us;47us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;15us;43us;44us;45us;46us;47us;48us;48us;49us;50us;51us;52us;53us;54us;55us;58us;15us;43us;44us;45us;46us;47us;48us;49us;49us;50us;51us;52us;53us;54us;55us;58us;15us;43us;44us;45us;46us;47us;48us;49us;50us;50us;51us;52us;53us;54us;55us;58us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;51us;52us;53us;54us;55us;58us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;52us;53us;54us;55us;58us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;53us;54us;55us;58us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;54us;55us;58us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;55us;58us;14us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;58us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;58us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;66us;16us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;58us;69us;70us;1us;43us;1us;44us;1us;45us;1us;46us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;1us;52us;1us;53us;1us;54us;1us;55us;1us;56us;1us;56us;2us;56us;66us;2us;57us;73us;1us;57us;2us;57us;66us;1us;58us;1us;58us;1us;59us;2us;60us;63us;1us;60us;1us;61us;2us;61us;66us;1us;62us;1us;63us;2us;63us;66us;1us;63us;2us;64us;65us;2us;64us;66us;1us;65us;1us;66us;1us;66us;1us;68us;1us;70us;1us;70us;1us;71us;1us;72us;1us;73us;1us;73us;1us;74us;1us;75us;1us;76us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;18us;20us;23us;27us;29us;32us;34us;38us;40us;44us;46us;49us;51us;53us;55us;57us;59us;61us;63us;65us;67us;69us;71us;73us;75us;77us;80us;82us;84us;86us;88us;90us;92us;94us;96us;98us;100us;102us;106us;108us;124us;126us;129us;131us;147us;149us;151us;155us;159us;177us;181us;184us;186us;189us;192us;209us;212us;214us;217us;220us;237us;240us;257us;260us;277us;280us;282us;284us;286us;288us;290us;295us;299us;301us;304us;306us;308us;324us;327us;329us;331us;333us;335us;351us;353us;369us;371us;387us;403us;419us;435us;451us;467us;483us;499us;515us;531us;547us;563us;579us;594us;610us;626us;642us;659us;661us;663us;665us;667us;669us;671us;673us;675us;677us;679us;681us;683us;685us;687us;689us;692us;695us;697us;700us;702us;704us;706us;709us;711us;713us;716us;718us;720us;723us;725us;728us;731us;733us;735us;737us;739us;741us;743us;745us;747us;749us;751us;753us;755us;|]
let _fsyacc_action_rows = 158
let _fsyacc_actionTableElements = [|3us;16386us;27us;157us;30us;156us;35us;23us;0us;49152us;1us;32768us;0us;3us;0us;16385us;3us;16386us;27us;157us;30us;156us;35us;23us;0us;16387us;1us;32768us;7us;7us;0us;16388us;0us;16389us;3us;32768us;1us;16us;24us;14us;39us;12us;3us;32768us;1us;16us;24us;14us;39us;13us;1us;16390us;5us;19us;0us;16391us;1us;16391us;1us;29us;3us;32768us;1us;16us;24us;14us;39us;12us;1us;16392us;5us;19us;3us;32768us;1us;16us;24us;14us;39us;12us;2us;32768us;2us;18us;5us;19us;0us;16393us;2us;32768us;6us;20us;40us;21us;0us;16394us;1us;32768us;6us;22us;0us;16395us;1us;32768us;39us;24us;1us;32768us;1us;25us;2us;16398us;27us;157us;30us;156us;1us;32768us;2us;27us;1us;32768us;3us;37us;0us;16396us;2us;16398us;27us;157us;30us;156us;1us;32768us;2us;31us;1us;32768us;3us;37us;0us;16397us;0us;16399us;1us;16400us;8us;35us;2us;32768us;27us;157us;30us;156us;0us;16401us;19us;16403us;1us;135us;3us;37us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;27us;157us;29us;55us;30us;156us;31us;155us;32us;92us;33us;94us;34us;50us;36us;61us;37us;66us;39us;86us;40us;151us;41us;152us;1us;32768us;4us;39us;0us;16402us;19us;16403us;1us;135us;3us;37us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;27us;157us;29us;55us;30us;156us;31us;155us;32us;92us;33us;94us;34us;50us;36us;61us;37us;66us;39us;86us;40us;151us;41us;152us;0us;16404us;1us;32768us;7us;43us;19us;16403us;1us;135us;3us;37us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;27us;157us;29us;55us;30us;156us;31us;155us;32us;92us;33us;94us;34us;50us;36us;61us;37us;66us;39us;86us;40us;151us;41us;152us;0us;16405us;0us;16406us;1us;16406us;28us;59us;0us;16407us;15us;32768us;7us;49us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;0us;16408us;13us;32768us;1us;135us;7us;51us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;0us;16409us;15us;32768us;7us;53us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;0us;16410us;0us;16411us;1us;32768us;1us;56us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;15us;32768us;2us;58us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;17us;32768us;1us;135us;3us;37us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;29us;55us;31us;155us;32us;92us;33us;94us;34us;50us;36us;61us;37us;66us;39us;86us;40us;151us;41us;152us;17us;32768us;1us;135us;3us;37us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;29us;55us;31us;155us;32us;92us;33us;94us;34us;50us;36us;61us;37us;66us;39us;86us;40us;151us;41us;152us;0us;16412us;1us;32768us;1us;62us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;15us;32768us;2us;64us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;17us;32768us;1us;135us;3us;37us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;29us;55us;31us;155us;32us;92us;33us;94us;34us;50us;36us;61us;37us;66us;39us;86us;40us;151us;41us;152us;0us;16413us;1us;32768us;1us;67us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;15us;32768us;7us;69us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;15us;32768us;7us;71us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;15us;32768us;2us;73us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;17us;32768us;1us;135us;3us;37us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;29us;55us;31us;155us;32us;92us;33us;94us;34us;50us;36us;61us;37us;66us;39us;86us;40us;151us;41us;152us;0us;16414us;0us;16415us;0us;16416us;0us;16417us;0us;16418us;3us;16419us;2us;142us;5us;146us;9us;84us;2us;16419us;5us;146us;9us;84us;0us;16420us;1us;16420us;2us;136us;0us;16421us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;14us;16422us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;1us;16446us;1us;87us;12us;16451us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;1us;32768us;2us;89us;0us;16423us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;0us;16424us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;14us;16425us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;0us;16426us;3us;16427us;24us;115us;25us;116us;26us;117us;3us;16428us;24us;115us;25us;116us;26us;117us;0us;16429us;0us;16430us;0us;16431us;9us;16432us;17us;120us;18us;121us;19us;122us;20us;123us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;9us;16433us;17us;120us;18us;121us;19us;122us;20us;123us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;5us;16434us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;5us;16435us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;5us;16436us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;5us;16437us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;12us;16438us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;13us;16439us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;14us;32768us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;15us;32768us;11us;133us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;14us;16442us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;15us;32768us;6us;147us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;15us;16453us;8us;149us;13us;125us;14us;124us;15us;118us;16us;119us;17us;120us;18us;121us;19us;122us;20us;123us;21us;132us;22us;113us;23us;114us;24us;115us;25us;116us;26us;117us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;1us;32768us;22us;127us;3us;32768us;1us;140us;24us;143us;39us;139us;1us;16440us;5us;146us;2us;32768us;23us;130us;40us;154us;3us;32768us;1us;140us;24us;143us;39us;139us;1us;16441us;5us;146us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;0us;16443us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;0us;16444us;3us;32768us;1us;140us;24us;143us;39us;139us;1us;16445us;5us;146us;0us;16446us;3us;32768us;1us;140us;24us;143us;39us;139us;2us;32768us;2us;142us;5us;146us;0us;16447us;8us;32768us;1us;135us;10us;137us;23us;153us;24us;143us;31us;155us;39us;139us;40us;151us;41us;152us;1us;16448us;5us;146us;0us;16449us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;0us;16450us;0us;16452us;12us;32768us;1us;135us;10us;137us;12us;90us;22us;126us;23us;129us;24us;143us;31us;155us;32us;92us;33us;94us;39us;86us;40us;151us;41us;152us;0us;16454us;0us;16455us;0us;16456us;1us;32768us;40us;154us;0us;16457us;0us;16458us;0us;16459us;0us;16460us;|]
let _fsyacc_actionTableRowOffsets = [|0us;4us;5us;7us;8us;12us;13us;15us;16us;17us;21us;25us;27us;28us;30us;34us;36us;40us;43us;44us;47us;48us;50us;51us;53us;55us;58us;60us;62us;63us;66us;68us;70us;71us;72us;74us;77us;78us;98us;100us;101us;121us;122us;124us;144us;145us;146us;148us;149us;165us;166us;180us;181us;197us;198us;199us;201us;214us;230us;248us;266us;267us;269us;282us;298us;316us;317us;319us;332us;348us;361us;377us;390us;406us;424us;425us;426us;427us;428us;429us;433us;436us;437us;439us;440us;453us;468us;470us;483us;485us;486us;499us;500us;513us;528us;529us;533us;537us;538us;539us;540us;550us;560us;566us;572us;578us;584us;597us;611us;626us;642us;657us;673us;689us;702us;715us;728us;741us;754us;767us;780us;793us;806us;819us;832us;845us;858us;860us;864us;866us;869us;873us;875us;888us;901us;902us;915us;916us;920us;922us;923us;927us;930us;931us;940us;942us;943us;956us;957us;958us;971us;972us;973us;974us;976us;977us;978us;979us;|]
let _fsyacc_reductionSymbolCounts = [|1us;2us;0us;2us;2us;1us;2us;1us;2us;3us;3us;4us;6us;6us;0us;1us;1us;3us;3us;0us;2us;3us;1us;1us;2us;2us;3us;1us;7us;5us;9us;7us;5us;5us;9us;1us;1us;1us;3us;4us;2us;2us;1us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;5us;1us;3us;2us;1us;3us;2us;2us;4us;0us;1us;1us;3us;1us;1us;2us;1us;1us;1us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;3us;3us;4us;5us;5us;5us;5us;5us;6us;6us;7us;7us;8us;8us;9us;10us;10us;10us;11us;11us;12us;12us;12us;12us;12us;12us;12us;13us;13us;13us;13us;14us;14us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;16us;16us;16us;17us;17us;17us;17us;17us;18us;18us;19us;19us;20us;20us;20us;20us;21us;21us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16385us;65535us;16387us;65535us;16388us;16389us;65535us;65535us;65535us;16391us;65535us;65535us;65535us;65535us;65535us;16393us;65535us;16394us;65535us;16395us;65535us;65535us;65535us;65535us;65535us;16396us;65535us;65535us;65535us;16397us;16399us;65535us;65535us;16401us;65535us;65535us;16402us;65535us;16404us;65535us;65535us;16405us;16406us;65535us;16407us;65535us;16408us;65535us;16409us;65535us;16410us;16411us;65535us;65535us;65535us;65535us;65535us;16412us;65535us;65535us;65535us;65535us;16413us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16414us;16415us;16416us;16417us;16418us;65535us;65535us;16420us;65535us;16421us;65535us;65535us;65535us;65535us;65535us;16423us;65535us;65535us;65535us;65535us;16426us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16443us;65535us;16444us;65535us;65535us;16446us;65535us;65535us;16447us;65535us;65535us;16449us;65535us;16450us;16452us;65535us;16454us;16455us;16456us;65535us;16457us;16458us;16459us;16460us;|]
let _fsyacc_reductions = lazy [|
# 417 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 426 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "CPar.fsy"
                                                               Prog _1 
                   )
# 41 "CPar.fsy"
                 : Absyn.program));
# 437 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "CPar.fsy"
                                                               [] 
                   )
# 45 "CPar.fsy"
                 : 'gentype_Topdecs));
# 447 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 46 "CPar.fsy"
                 : 'gentype_Topdecs));
# 459 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 50 "CPar.fsy"
                 : 'gentype_Topdec));
# 470 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               _1 
                   )
# 51 "CPar.fsy"
                 : 'gentype_Topdec));
# 481 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Vardec));
# 493 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 59 "CPar.fsy"
                 : 'gentype_Vardesc));
# 504 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 60 "CPar.fsy"
                 : 'gentype_Vardesc));
# 515 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               _2                                      
                   )
# 61 "CPar.fsy"
                 : 'gentype_Vardesc));
# 526 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 62 "CPar.fsy"
                 : 'gentype_Vardesc));
# 537 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Vardesc));
# 549 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 67 "CPar.fsy"
                 : 'gentype_Fundec));
# 562 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 68 "CPar.fsy"
                 : 'gentype_Fundec));
# 576 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "CPar.fsy"
                                                               [] 
                   )
# 72 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 586 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "CPar.fsy"
                                                               _1 
                   )
# 73 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 597 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "CPar.fsy"
                                                               [_1]     
                   )
# 77 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 608 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 78 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 620 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "CPar.fsy"
                                                               Block _2 
                   )
# 82 "CPar.fsy"
                 : 'gentype_Block));
# 631 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "CPar.fsy"
                                                               [] 
                   )
# 86 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 641 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 87 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 653 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 88 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 665 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                               _1 
                   )
# 92 "CPar.fsy"
                 : 'gentype_Stmt));
# 676 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "CPar.fsy"
                                                               _1 
                   )
# 93 "CPar.fsy"
                 : 'gentype_Stmt));
# 687 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 97 "CPar.fsy"
                 : 'gentype_StmtM));
# 698 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               Return None          
                   )
# 98 "CPar.fsy"
                 : 'gentype_StmtM));
# 708 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 99 "CPar.fsy"
                 : 'gentype_StmtM));
# 719 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               _1                   
                   )
# 100 "CPar.fsy"
                 : 'gentype_StmtM));
# 730 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 101 "CPar.fsy"
                 : 'gentype_StmtM));
# 743 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 102 "CPar.fsy"
                 : 'gentype_StmtM));
# 755 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                                         Block([Stmt(Expr(_3)); Stmt (While(_5, Block([Stmt (_9); Stmt (Expr(_7))])))]) 
                   )
# 103 "CPar.fsy"
                 : 'gentype_StmtM));
# 769 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 107 "CPar.fsy"
                 : 'gentype_StmtU));
# 782 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 108 "CPar.fsy"
                 : 'gentype_StmtU));
# 794 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 109 "CPar.fsy"
                 : 'gentype_StmtU));
# 806 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                                         Block([Stmt(Expr(_3)); Stmt (While(_5, Block([Stmt (_9); Stmt (Expr(_7))])))]) 
                   )
# 110 "CPar.fsy"
                 : 'gentype_StmtU));
# 820 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               Access _1           
                   )
# 114 "CPar.fsy"
                 : 'gentype_Expr));
# 831 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               _1                  
                   )
# 115 "CPar.fsy"
                 : 'gentype_Expr));
# 842 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               _1                  
                   )
# 119 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 853 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 120 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 865 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 121 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 877 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 122 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 888 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 123 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 899 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 124 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 909 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 125 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 921 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 126 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 933 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 127 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 945 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 128 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 957 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 129 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 969 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 130 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 981 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 131 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 993 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 132 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1005 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 133 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1017 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 134 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1029 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 135 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1041 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 136 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1053 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 137 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1065 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               PreInc(_3)          
                   )
# 138 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1076 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               PreDec(_3)          
                   )
# 139 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1087 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Cond(_1, _3, _5)    
                   )
# 140 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1100 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               CstI _1             
                   )
# 144 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               _2                  
                   )
# 145 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1122 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               Addr _2             
                   )
# 146 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1133 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               AccVar _1           
                   )
# 150 "CPar.fsy"
                 : 'gentype_Access));
# 1144 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               _2                  
                   )
# 151 "CPar.fsy"
                 : 'gentype_Access));
# 1155 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 152 "CPar.fsy"
                 : 'gentype_Access));
# 1166 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 153 "CPar.fsy"
                 : 'gentype_Access));
# 1177 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 154 "CPar.fsy"
                 : 'gentype_Access));
# 1189 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               []       
                   )
# 158 "CPar.fsy"
                 : 'gentype_Exprs));
# 1199 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               _1       
                   )
# 159 "CPar.fsy"
                 : 'gentype_Exprs));
# 1210 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               [_1]     
                   )
# 163 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1221 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 164 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1233 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               _1       
                   )
# 168 "CPar.fsy"
                 : 'gentype_Const));
# 1244 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               _1       
                   )
# 169 "CPar.fsy"
                 : 'gentype_Const));
# 1255 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               - _2     
                   )
# 170 "CPar.fsy"
                 : 'gentype_Const));
# 1266 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               -1       
                   )
# 171 "CPar.fsy"
                 : 'gentype_Const));
# 1276 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               TypI     
                   )
# 175 "CPar.fsy"
                 : 'gentype_Type));
# 1286 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               TypC     
                   )
# 176 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1297 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 45;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
